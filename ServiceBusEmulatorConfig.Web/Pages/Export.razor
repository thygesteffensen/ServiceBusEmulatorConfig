@page "/export"
@inject ServiceBusEmulatorConfig.Web.Services.ServiceBusConnectionService ConnectionService
@inject ISnackbar Snackbar
@inject IJSRuntime JsRuntime

<PageTitle>Export Config - Service Bus Explorer</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudPaper Class="pa-4 my-4">
        <MudText Typo="Typo.h4" Class="mb-4">Export Service Bus Configuration</MudText>

        @if (!ConnectionService.IsConnected)
        {
            <MudAlert Severity="Severity.Warning" Class="mb-4">
                Not connected to any Service Bus namespace. Please <MudLink Href="connection">connect first</MudLink>.
            </MudAlert>
        }
        else
        {
            <MudText Typo="Typo.body1" Class="mb-4">
                Export your Azure Service Bus configuration to use with a local emulator.
            </MudText>

            <div class="d-flex justify-center">
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           Size="Size.Large"
                           StartIcon="@Icons.Material.Filled.Download"
                           Disabled="@_exporting"
                           OnClick="ExportConfigAsync">
                    @if (_exporting)
                    {
                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                        <MudText Class="ms-2">Exporting...</MudText>
                    }
                    else
                    {
                        <MudText>Export Configuration</MudText>
                    }
                </MudButton>
            </div>

            @if (!string.IsNullOrEmpty(_exportedConfig))
            {
                <MudPaper Class="mt-6 pa-4" Elevation="0">
                    <MudText Typo="Typo.h6" Class="mb-2">Configuration:</MudText>
                    <MudTextField T="string"
                                 Value="@_exportedConfig"
                                 ReadOnly="true"
                                 Lines="15"
                                 Variant="Variant.Outlined"
                                 FullWidth="true" />
                    <div class="d-flex justify-end mt-2">
                        <MudButton Variant="Variant.Outlined"
                                  Color="Color.Secondary"
                                  StartIcon="@Icons.Material.Filled.ContentCopy"
                                  OnClick="CopyToClipboard">
                            Copy to Clipboard
                        </MudButton>
                    </div>
                </MudPaper>
            }
        }
    </MudPaper>
</MudContainer>

@code {
    private bool _exporting = false;
    private string _exportedConfig = "";

    private async Task ExportConfigAsync()
    {
        try
        {
            _exporting = true;
            var config = await ConnectionService.ExportConfigAsync();
            _exportedConfig = System.Text.Json.JsonSerializer.Serialize(config, new System.Text.Json.JsonSerializerOptions
            {
                WriteIndented = true
            });
            Snackbar.Add("Configuration exported successfully", Severity.Success);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Failed to export configuration: {ex.Message}", Severity.Error);
        }
        finally
        {
            _exporting = false;
        }
    }

    private async Task CopyToClipboard()
    {
        await JsRuntime.InvokeVoidAsync("navigator.clipboard.writeText", _exportedConfig);
        Snackbar.Add("Configuration copied to clipboard", Severity.Success);
    }
}
